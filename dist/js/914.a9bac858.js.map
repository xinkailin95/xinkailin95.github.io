{"version":3,"file":"js/914.a9bac858.js","mappings":"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","sources":["webpack://xinkailin95.github.io/./node_modules/core-js/modules/es.array.fill.js","webpack://xinkailin95.github.io/./node_modules/core-js/modules/es.string.sub.js","webpack://xinkailin95.github.io/./node_modules/core-js/modules/es.string.substr.js","webpack://xinkailin95.github.io/./node_modules/core-js/modules/es.typed-array.float32-array.js","webpack://xinkailin95.github.io/./node_modules/core-js/modules/es.typed-array.uint16-array.js","webpack://xinkailin95.github.io/../src/math/MathUtil.js","webpack://xinkailin95.github.io/../src/math/Span.js","webpack://xinkailin95.github.io/../src/utils/WebGLUtil.js","webpack://xinkailin95.github.io/../src/utils/DomUtil.js","webpack://xinkailin95.github.io/../src/utils/ImgUtil.js","webpack://xinkailin95.github.io/../src/utils/Util.js","webpack://xinkailin95.github.io/../src/utils/Puid.js","webpack://xinkailin95.github.io/../src/core/Pool.js","webpack://xinkailin95.github.io/../src/debug/Stats.js","webpack://xinkailin95.github.io/../src/events/EventDispatcher.js","webpack://xinkailin95.github.io/../src/math/Integration.js","webpack://xinkailin95.github.io/../src/core/Proton.js","webpack://xinkailin95.github.io/../src/utils/Rgb.js","webpack://xinkailin95.github.io/../src/math/ease.js","webpack://xinkailin95.github.io/../src/math/Vector2D.js","webpack://xinkailin95.github.io/../src/core/Particle.js","webpack://xinkailin95.github.io/../src/utils/ColorUtil.js","webpack://xinkailin95.github.io/../src/math/Polar2D.js","webpack://xinkailin95.github.io/../src/math/Mat3.js","webpack://xinkailin95.github.io/../src/math/ArraySpan.js","webpack://xinkailin95.github.io/../src/math/Rectangle.js","webpack://xinkailin95.github.io/../src/initialize/Rate.js","webpack://xinkailin95.github.io/../src/initialize/Initialize.js","webpack://xinkailin95.github.io/../src/initialize/Life.js","webpack://xinkailin95.github.io/../src/zone/Zone.js","webpack://xinkailin95.github.io/../src/zone/PointZone.js","webpack://xinkailin95.github.io/../src/initialize/Position.js","webpack://xinkailin95.github.io/../src/initialize/Velocity.js","webpack://xinkailin95.github.io/../src/initialize/Mass.js","webpack://xinkailin95.github.io/../src/initialize/Radius.js","webpack://xinkailin95.github.io/../src/initialize/Body.js","webpack://xinkailin95.github.io/../src/behaviour/Behaviour.js","webpack://xinkailin95.github.io/../src/behaviour/Force.js","webpack://xinkailin95.github.io/../src/behaviour/Attraction.js","webpack://xinkailin95.github.io/../src/behaviour/RandomDrift.js","webpack://xinkailin95.github.io/../src/behaviour/Gravity.js","webpack://xinkailin95.github.io/../src/behaviour/Collision.js","webpack://xinkailin95.github.io/../src/behaviour/CrossZone.js","webpack://xinkailin95.github.io/../src/behaviour/Alpha.js","webpack://xinkailin95.github.io/../src/behaviour/Scale.js","webpack://xinkailin95.github.io/../src/behaviour/Rotate.js","webpack://xinkailin95.github.io/../src/behaviour/Color.js","webpack://xinkailin95.github.io/../src/behaviour/Cyclone.js","webpack://xinkailin95.github.io/../src/behaviour/Repulsion.js","webpack://xinkailin95.github.io/../src/behaviour/GravityWell.js","webpack://xinkailin95.github.io/../src/initialize/InitializeUtil.js","webpack://xinkailin95.github.io/../src/emitter/Emitter.js","webpack://xinkailin95.github.io/../src/emitter/BehaviourEmitter.js","webpack://xinkailin95.github.io/../src/emitter/FollowEmitter.js","webpack://xinkailin95.github.io/../src/render/BaseRenderer.js","webpack://xinkailin95.github.io/../src/render/CanvasRenderer.js","webpack://xinkailin95.github.io/../src/render/DomRenderer.js","webpack://xinkailin95.github.io/../src/render/EaselRenderer.js","webpack://xinkailin95.github.io/../src/render/PixelRenderer.js","webpack://xinkailin95.github.io/../src/render/PixiRenderer.js","webpack://xinkailin95.github.io/../src/utils/MStack.js","webpack://xinkailin95.github.io/../src/render/WebGLRenderer.js","webpack://xinkailin95.github.io/../src/render/CustomRenderer.js","webpack://xinkailin95.github.io/../src/zone/LineZone.js","webpack://xinkailin95.github.io/../src/zone/CircleZone.js","webpack://xinkailin95.github.io/../src/zone/RectZone.js","webpack://xinkailin95.github.io/../src/zone/ImageZone.js","webpack://xinkailin95.github.io/../src/debug/Debug.js","webpack://xinkailin95.github.io/../src/index.js","webpack://xinkailin95.github.io/../src/RAFManager.js","webpack://xinkailin95.github.io/./src/views/index.vue?f77b","webpack://xinkailin95.github.io/../../../../../packages/components/container/src/container.vue","webpack://xinkailin95.github.io/../../../../../packages/components/container/src/aside.vue","webpack://xinkailin95.github.io/../../../../../packages/components/container/src/footer.vue","webpack://xinkailin95.github.io/../../../../../packages/components/container/src/header.vue","webpack://xinkailin95.github.io/../../../../../packages/components/container/src/main.vue","webpack://xinkailin95.github.io/../../../../../packages/components/container/index.ts","webpack://xinkailin95.github.io/./src/views/layout/Header.vue?fc3b","webpack://xinkailin95.github.io/./src/views/layout/Header.vue","webpack://xinkailin95.github.io/./src/views/layout/Header.vue?524b","webpack://xinkailin95.github.io/./src/views/layout/Main.vue?23b7","webpack://xinkailin95.github.io/./src/views/layout/Main.vue","webpack://xinkailin95.github.io/./src/views/layout/Main.vue?e563","webpack://xinkailin95.github.io/./src/views/layout/Footer.vue?8280","webpack://xinkailin95.github.io/./src/views/layout/Footer.vue","webpack://xinkailin95.github.io/./src/views/layout/Footer.vue?e7d7","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/utils/Rand.js","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/BallParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CanvasComp.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CanvasComp.vue?2241","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/utils/Color.js","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/BallParticles.vue?89a3","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/ColorParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/ColorParticles.vue?5a26","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CircleParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CircleParticles.vue?0b9d","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CobwebParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CobwebParticles.vue?9d55","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/ThickParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/ThickParticles.vue?4597","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CustomParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/CustomParticles.vue?c5df","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/LinesParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/LinesParticles.vue?cbda","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue?bfdd","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/SquareParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/SquareParticles.vue?c4b2","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/FountainParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/FountainParticles.vue?0ef6","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/TadpoleParticles.vue","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/particles/TadpoleParticles.vue?d346","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue?f507","webpack://xinkailin95.github.io/./node_modules/particles-bg-vue/src/particles-bg/index.js","webpack://xinkailin95.github.io/./src/views/index.vue","webpack://xinkailin95.github.io/./src/views/index.vue?4859","webpack://xinkailin95.github.io/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.sub` method\n// https://tc39.es/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\n\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\nvar min = Math.min;\n\n// eslint-disable-next-line unicorn/prefer-string-slice, es-x/no-string-prototype-substr -- required for testing\nvar FORCED = !''.substr || 'ab'.substr(-1) !== 'b';\n\n// `String.prototype.substr` method\n// https://tc39.es/ecma262/#sec-string.prototype.substr\n$({ target: 'String', proto: true, forced: FORCED }, {\n  substr: function substr(start, length) {\n    var that = toString(requireObjectCoercible(this));\n    var size = that.length;\n    var intStart = toIntegerOrInfinity(start);\n    var intLength, intEnd;\n    if (intStart === Infinity) intStart = 0;\n    if (intStart < 0) intStart = max(size + intStart, 0);\n    intLength = length === undefined ? size : toIntegerOrInfinity(length);\n    if (intLength <= 0 || intLength === Infinity) return '';\n    intEnd = min(intStart + intLength, size);\n    return intStart >= intEnd ? '' : stringSlice(that, intStart, intEnd);\n  }\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Float32Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Float32', function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var createTypedArrayConstructor = require('../internals/typed-array-constructor');\n\n// `Uint16Array` constructor\n// https://tc39.es/ecma262/#sec-typedarray-objects\ncreateTypedArrayConstructor('Uint16', function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return Math.floor(Math.random() * (b - a)) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return (\n      \"#\" +\n      (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(\n        `proton_canvas_cache_${++canvasId}`,\n        width,\n        height\n      );\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import Span from \"../math/Span\";\nimport ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(\n        constructor,\n        [null].concat(args)\n      );\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  },\n\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return (\n      typeof obj === \"object\" &&\n      typeof target === \"object\" &&\n      obj.isInner &&\n      target.isInner\n    );\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter)\n          str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.initializes) +\n            \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.behaviours) +\n            \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n\n    target.prototype.hasEventListener =\n      EventDispatcher.prototype.hasEventListener;\n\n    target.prototype.addEventListener =\n      EventDispatcher.prototype.addEventListener;\n\n    target.prototype.removeEventListener =\n      EventDispatcher.prototype.removeEventListener;\n\n    target.prototype.removeAllEventListeners =\n      EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval =\n      fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = ''\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {}\n\n  /** @type {object} */\n  data = {}\n\n  /** @type {Behaviour[]} */\n  behaviours = []\n\n  /** @type {Vector2D} */\n  p = []\n\n  /** @type {Vector2D} */\n  v = []\n\n  /** @type {Vector2D} */\n  a = []\n\n  /** @type {Rgb} */\n  rgb = {}\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && Util.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] &&\n        this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y)\n      return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from '../core/Proton';\nimport Util from '../utils/Util';\nimport ease from '../math/ease';\n\nexport default class Behaviour {\n    static id = 0;\n\n    /**\n     * The Behaviour class is the base for the other Behaviour\n     *\n     * @memberof! -\n     * @interface\n     * @alias Proton.Behaviour\n     *\n     * @param {Number} life \tthe behaviours life\n     * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n     *\n     * @property {String}  id \t\tThe behaviours id\n     * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n     * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n     * @property {Number}  age=0 \tHow long the particle should be 'alife'\n     * @property {Number}  energy=1\n     * @property {Boolean} dead=false The particle is dead at first\n     * @property {Array}   parents \tThe behaviour's parents array\n     * @property {String}  name \tThe behaviour name\n     */\n    constructor(life, easing) {\n\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n\n        this.age = 0;\n        this.energy = 1;\n        this.dead = false;\n        this.parents = [];\n\n        this.id = `Behaviour_${Behaviour.id++}`;\n        this.name = 'Behaviour';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} [life=Infinity] \t\tthis behaviour's life\n     * @param {String} [easing=easeLinear] \tthis behaviour's easing\n     */\n    reset(life, easing) {\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n    }\n\n    /**\n     * Normalize a force by 1:100;\n     *\n     * @method normalizeForce\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Vector2D} force\n     */\n    normalizeForce(force) {\n        return force.multiplyScalar(Proton.MEASURE);\n    }\n\n    /**\n     * Normalize a value by 1:100;\n     *\n     * @method normalizeValue\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} value\n     */\n    normalizeValue(value) {\n        return value * Proton.MEASURE;\n    }\n\n    /**\n     * Initialize the behaviour's parameters for all particles\n     *\n     * @method initialize\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     */\n    initialize(particle) {}\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} \t\t\ttime the integrate time 1/ms\n     * @param {Int} \t\t\tindex the particle index\n     */\n    calculate(particle, time, index) {\n        this.age += time;\n\n        if (this.age >= this.life || this.dead) {\n            this.energy = 0;\n            this.dead = true;\n            this.destroy();\n        } else {\n            const scale = this.easing(particle.age / particle.life);\n            this.energy = Math.max(1 - scale, 0);\n        }\n    }\n\n    /**\n     * Destory this behaviour\n     *\n     * @method destroy\n     * @memberof Proton.Behaviour\n     * @instance\n     */\n    destroy() {\n        let i = this.parents.length;\n        while (i--) {\n            this.parents[i].removeBehaviour(this);\n        }\n\n        this.parents.length = 0;\n    }\n}\n","import Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Force extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Force\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(fx, fy, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\t\tthis.name = 'Force';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(fx, fy, life, easing) {\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.a.add(this.force);\n\t}\n}","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from './Force';\n\nexport default class Gravity extends Force {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Force\n\t * @constructor\n\t * @alias Proton.Gravity\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(g, life, easing) {\n\t\tsuper(0, g, life, easing);\n\t\tthis.name = 'Gravity';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Gravity\n\t * @instance\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(g, life, easing) {\n\t\tsuper.reset(0, g, life, easing);\n\t}\n}","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Collision extends Behaviour {\n\n\t/**\n\t * The callback after collision\n\t *\n\t * @callback Callback\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Proton.Paritcle} otherParticle\n\t */\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Collision\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(emitter, mass, callback, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(emitter, mass, callback);\n\t\tthis.name = 'Collision';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method reset\n\t * @instance\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(emitter, mass, callback, life, easing) {\n\t\tthis.emitter = Util.initValue(emitter, null);\n\t\tthis.mass = Util.initValue(mass, true);\n\t\tthis.callback = Util.initValue(callback, null);\n\n\t\tthis.collisionPool = [];\n\t\tthis.delta = new Vector2D();\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method applyBehaviour\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tconst newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n\t\tconst length = newPool.length;\n\n\t\tlet otherParticle;\n\t\tlet lengthSq;\n\t\tlet overlap;\n\t\tlet totalMass;\n\t\tlet averageMass1, averageMass2;\n\t\tlet i;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\totherParticle = newPool[i];\n\n\t\t\tif (otherParticle !== particle) {\n\t\t\t\tthis.delta.copy(otherParticle.p);\n\t\t\t\tthis.delta.sub(particle.p);\n\n\t\t\t\tlengthSq = this.delta.lengthSq();\n\t\t\t\tconst distance = particle.radius + otherParticle.radius;\n\n\t\t\t\tif (lengthSq <= distance * distance) {\n\t\t\t\t\toverlap = distance - Math.sqrt(lengthSq);\n\t\t\t\t\toverlap += 0.5;\n\n\t\t\t\t\ttotalMass = particle.mass + otherParticle.mass;\n\t\t\t\t\taverageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n\t\t\t\t\taverageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n\t\t\t\t\tparticle.p.add(this.delta.clone().normalize().multiplyScalar(overlap * -averageMass1));\n\t\t\t\t\totherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n\t\t\t\t\tthis.callback && this.callback(particle, otherParticle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class CrossZone extends Behaviour {\n\n    /**\n     * Defines what happens if the particles come to the end of the specified zone\n     *\n     * @memberof! Proton#\n     * @augments Proton.Behaviour\n     * @constructor\n     * @alias Proton.CrossZone\n     *\n     * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n     * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n     *\n     * @property {String} name The Behaviour name\n     */\n    constructor(zone, crossType, life, easing) {\n        super(life, easing);\n\n        this.reset(zone, crossType);\n        this.name = 'CrossZone';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n     * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n     */\n    reset(zone, crossType, life, easing) {\n        this.zone = zone;\n        this.zone.crossType = Util.initValue(crossType, 'dead');\n\n        life && super.reset(life, easing);\n    }\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} the integrate time 1/ms\n     * @param {Int} the particle index\n     */\n    applyBehaviour(particle, time, index) {\n        this.calculate(particle, time, index);\n        this.zone.crossing(particle);\n    };\n}","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha =\n      particle.data.alphaB +\n      (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Scale extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Scale\n\t *\n\t * @todo add description for 'a' and 'b'\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(a, b, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(a, b);\n\t\tthis.name = 'Scale';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 1));\n\t\tthis.b = Span.setSpanValue(b);\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.data.scaleA = this.a.getValue();\n\t\tparticle.data.oldRadius = particle.radius;\n\t\tparticle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n\t\tif (particle.scale < 0.0001) particle.scale = 0;\n\t\tparticle.radius = particle.data.oldRadius * particle.scale;\n\t}\n}","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Rotate extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Rotate\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} [influence=Velocity] The rotation's influence\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(influence, b, style, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(influence, b, style);\n\t\tthis.name = 'Rotate';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} a\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, style, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 'Velocity'));\n\t\tthis.b = Span.setSpanValue(Util.initValue(b, 0));\n\t\tthis.style = Util.initValue(style, 'to');\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.rotation = this.a.getValue();\n\t\tparticle.data.rotationA = this.a.getValue();\n\n\t\tif (!this.same) particle.data.rotationB = this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\n\t\tif (!this.same) {\n\t\t\tif (this.style === 'to' || this.style === 'TO' || this.style === '_') {\n\t\t\t\tparticle.rotation += particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy\n\t\t\t} else {\n\t\t\t\tparticle.rotation += particle.data.rotationB;\n\t\t\t}\n\t\t} else if (this.a.a === 'V' || this.a.a === 'Velocity' || this.a.a === 'v') {\n\t\t\t// beta...\n\t\t\tparticle.rotation = particle.getDirection();\n\t\t}\n\t}\n\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r =\n        particle.data.colorB.r +\n        (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g =\n        particle.data.colorB.g +\n        (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b =\n        particle.data.colorB.b +\n        (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = Math.floor(particle.rgb.r);\n      particle.rgb.g = Math.floor(particle.rgb.g);\n      particle.rgb.b = Math.floor(particle.rgb.b);\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from './Attraction';\n\nexport default class Repulsion extends Attraction {\n\n\t/**\n\t * The oppisite of Proton.Attraction - turns the force\n\t *\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Attraction\n\t * @constructor\n\t * @alias Proton.Repulsion\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {Number} force\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(targetPosition, force, radius, life, easing) {\n\t\tsuper(targetPosition, force, radius, life, easing);\n\n\t\tthis.force *= -1;\n\t\tthis.name = 'Repulsion';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Repulsion\n\t * @instance\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(targetPosition, force, radius, life, easing) {\n\t\tsuper.reset(targetPosition, force, radius, life, easing);\n\t\tthis.force *= -1;\n\t}\n}\n","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class GravityWell extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Behaviour\n\t * @constructor\n\t * @alias GravityWell\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(centerPoint, force, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tthis.name = 'GravityWell';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t */\n\treset(centerPoint, force, life, easing) {\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tlife && super.reset(life, easing);\n\t};\n\n\t/**\n\t * @inheritdoc\n\t */\n\tinitialize(particle) {\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n\t\tconst distanceSq = this.distanceVec.lengthSq();\n\n\t\tif (distanceSq !== 0) {\n\t\t\tconst distance = this.distanceVec.length();\n\t\t\tconst factor = (this.force * time) / (distanceSq * distance);\n\n\t\t\tparticle.v.x += factor * this.distanceVec.x;\n\t\t\tparticle.v.y += factor * this.distanceVec.y;\n\t\t}\n\t}\n}","import Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    Util.setProp(particle, initialize);\n    Util.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n\n    this.mouseTarget.addEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n    constructor(element, stroke) {\n        this.pool = new Pool();\n        this.element = element;\n        this.stroke = stroke;\n        this.circleConf = { isCircle: true };\n\n        this.initHandler();\n        this.name = \"BaseRenderer\";\n    }\n\n    setStroke(color = \"#000000\", thinkness = 1) {\n        this.stroke = { color, thinkness };\n    }\n\n    initHandler() {\n        this._protonUpdateHandler = () => {\n            this.onProtonUpdate.call(this);\n        };\n\n        this._protonUpdateAfterHandler = () => {\n            this.onProtonUpdateAfter.call(this);\n        };\n\n        this._emitterAddedHandler = emitter => {\n            this.onEmitterAdded.call(this, emitter);\n        };\n\n        this._emitterRemovedHandler = emitter => {\n            this.onEmitterRemoved.call(this, emitter);\n        };\n\n        this._particleCreatedHandler = particle => {\n            this.onParticleCreated.call(this, particle);\n        };\n\n        this._particleUpdateHandler = particle => {\n            this.onParticleUpdate.call(this, particle);\n        };\n\n        this._particleDeadHandler = particle => {\n            this.onParticleDead.call(this, particle);\n        };\n    }\n\n    init(proton) {\n        this.parent = proton;\n\n        proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n        proton.addEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n        proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n        proton.addEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n        proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n\n    resize(width, height) {}\n\n    destroy() {\n        this.remove();\n    }\n\n    remove(proton) {\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE\",\n            this._protonUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        this.parent.removeEventListener(\n            \"EMITTER_ADDED\",\n            this._emitterAddedHandler\n        );\n        this.parent.removeEventListener(\n            \"EMITTER_REMOVED\",\n            this._emitterRemovedHandler\n        );\n\n        this.parent.removeEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_UPDATE\",\n            this._particleUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_DEAD\",\n            this._particleDeadHandler\n        );\n\n        this.parent = null;\n    }\n\n    onProtonUpdate() {}\n    onProtonUpdateAfter() {}\n\n    onEmitterAdded(emitter) {}\n    onEmitterRemoved(emitter) {}\n\n    onParticleCreated(particle) {}\n    onParticleUpdate(particle) {}\n    onParticleDead(particle) {}\n}\n","import ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n    constructor(element) {\n        super(element);\n\n        this.stroke = null;\n        this.context = this.element.getContext(\"2d\");\n        this.bufferCache = {};\n        this.name = \"CanvasRenderer\";\n    }\n\n    resize(width, height) {\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    onProtonUpdate() {\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n\n    onParticleCreated(particle) {\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            particle.color = particle.color || \"#ff0000\";\n        }\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.body) {\n            if (particle.body instanceof Image) this.drawImage(particle);\n        } else {\n            this.drawCircle(particle);\n        }\n    }\n\n    onParticleDead(particle) {\n        particle.body = null;\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        particle.body = img;\n    }\n\n    // private drawCircle\n    drawImage(particle) {\n        const w = (particle.body.width * particle.scale) | 0;\n        const h = (particle.body.height * particle.scale) | 0;\n        const x = particle.p.x - w / 2;\n        const y = particle.p.y - h / 2;\n\n        if (!!particle.color) {\n            if (!particle.data[\"buffer\"])\n                particle.data.buffer = this.createBuffer(particle.body);\n\n            const bufContext = particle.data.buffer.getContext(\"2d\");\n            bufContext.clearRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalAlpha = particle.alpha;\n            bufContext.drawImage(particle.body, 0, 0);\n\n            bufContext.globalCompositeOperation = \"source-atop\";\n            bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n            bufContext.fillRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalCompositeOperation = \"source-over\";\n            bufContext.globalAlpha = 1;\n\n            this.context.drawImage(\n                particle.data.buffer,\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height,\n                x,\n                y,\n                w,\n                h\n            );\n        } else {\n            this.context.save();\n\n            this.context.globalAlpha = particle.alpha;\n            this.context.translate(particle.p.x, particle.p.y);\n            this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n            this.context.translate(-particle.p.x, -particle.p.y);\n            this.context.drawImage(\n                particle.body,\n                0,\n                0,\n                particle.body.width,\n                particle.body.height,\n                x,\n                y,\n                w,\n                h\n            );\n\n            this.context.globalAlpha = 1;\n            this.context.restore();\n        }\n    }\n\n    // private drawCircle --\n    drawCircle(particle) {\n        if (particle.rgb) {\n            this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n        } else {\n            this.context.fillStyle = particle.color;\n        }\n\n        // draw circle\n        this.context.beginPath();\n        this.context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n        );\n\n        if (this.stroke) {\n            this.context.strokeStyle = this.stroke.color;\n            this.context.lineWidth = this.stroke.thinkness;\n            this.context.stroke();\n        }\n\n        this.context.closePath();\n        this.context.fill();\n    }\n\n    // private createBuffer\n    createBuffer(image) {\n        if (image instanceof Image) {\n            const size = image.width + \"_\" + image.height;\n            let canvas = this.bufferCache[size];\n\n            if (!canvas) {\n                canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                this.bufferCache[size] = canvas;\n            }\n\n            return canvas;\n        }\n    }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.transform3d = false;\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d)\n        DomUtil.transform3d(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n      else\n        DomUtil.transform(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n\n      particle.body.style.opacity = particle.alpha;\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return (\n      typeof particle.body === \"object\" &&\n      particle.body &&\n      !particle.body.isInner\n    );\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body, particle);\n  }\n\n  // private --\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      2 * particle.radius,\n      2 * particle.radius\n    );\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      body.width,\n      body.height\n    );\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (this.stroke instanceof String) graphics.beginStroke(this.stroke);\n      else graphics.beginStroke(\"#000000\");\n    }\n    graphics\n      .beginFill(particle.color || \"#ff0000\")\n      .drawCircle(0, 0, particle.radius);\n\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle\n      ? rectangle\n      : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        Math.floor(particle.p.x - this.rectangle.x),\n        Math.floor(particle.p.y - this.rectangle.y),\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth)\n      return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage =\n        PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  destroy(particles) {\n    super.destroy();\n    this.pool.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner\n      ? this.createFromImage(body.src)\n      : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = this.stroke instanceof String ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++)\n      this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from '../math/Mat3';\nimport BaseRenderer from './BaseRenderer';\n\nimport Util from '../utils/Util';\nimport ImgUtil from '../utils/ImgUtil';\nimport MStack from '../utils/MStack';\nimport DomUtil from '../utils/DomUtil';\nimport WebGLUtil from '../utils/WebGLUtil';\nimport MathUtil from '../math/MathUtil';\n\nexport default class WebGLRenderer extends BaseRenderer {\n\n    constructor(element) {\n        super(element);\n\n        this.gl = this.element.getContext('experimental-webgl', { antialias: true, stencil: false, depth: false });\n        if (!this.gl) alert('Sorry your browser do not suppest WebGL!');\n\n        this.initVar();\n        this.setMaxRadius();\n        this.initShaders();\n        this.initBuffers();\n\n        this.gl.blendEquation(this.gl.FUNC_ADD);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        this.gl.enable(this.gl.BLEND);\n\n        this.addImg2Body = this.addImg2Body.bind(this);\n\n        this.name = 'WebGLRenderer';\n    }\n\n    init(proton) {\n        super.init(proton);\n        this.resize(this.element.width, this.element.height);\n    }\n\n    resize(width, height) {\n        this.umat[4] = -2;\n        this.umat[7] = 1;\n\n        this.smat[0] = 1 / width;\n        this.smat[4] = 1 / height;\n\n        this.mstack.set(this.umat, 0);\n        this.mstack.set(this.smat, 1);\n\n        this.gl.viewport(0, 0, width, height);\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    setMaxRadius(radius) {\n        this.circleCanvasURL = this.createCircle(radius);\n    }\n\n    getVertexShader() {\n        const vsSource = ['uniform vec2 viewport;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 tMat;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'void main() {', 'vec3 v = tMat * vec3(aVertexPosition, 1.0);', 'gl_Position = vec4(v.x, v.y, 0, 1);', 'vTextureCoord = aTextureCoord;', 'alpha = tMat[0][2];', '}'].join('\\n');\n        return vsSource;\n    }\n\n    getFragmentShader() {\n        const fsSource = ['precision mediump float;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'uniform sampler2D uSampler;', 'uniform vec4 color;', 'uniform bool useTexture;', 'uniform vec3 uColor;', 'void main() {', 'vec4 textureColor = texture2D(uSampler, vTextureCoord);', 'gl_FragColor = textureColor * vec4(uColor, 1.0);', 'gl_FragColor.w *= alpha;', '}'].join('\\n');\n        return fsSource;\n    }\n\n    initVar() {\n        this.mstack = new MStack();\n        this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n        this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n        this.texturebuffers = {};\n    }\n\n    blendEquation(A) {\n        this.gl.blendEquation(this.gl[A]);\n    }\n\n    blendFunc(A, B) {\n        this.gl.blendFunc(this.gl[A], this.gl[B]);\n    }\n\n    getShader(gl, str, fs) {\n        const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n    initShaders() {\n        const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n        const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n        this.sprogram = this.gl.createProgram();\n        this.gl.attachShader(this.sprogram, vertexShader);\n        this.gl.attachShader(this.sprogram, fragmentShader);\n        this.gl.linkProgram(this.sprogram);\n\n        if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS))\n            alert('Could not initialise shaders');\n\n        this.gl.useProgram(this.sprogram);\n        this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, 'aVertexPosition');\n        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(this.sprogram.tca);\n        this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n        this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, 'tMat');\n        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, 'uSampler');\n        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, 'useTexture');\n        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, 'uColor');\n        this.gl.uniform1i(this.sprogram.useTex, 1);\n    };\n\n    initBuffers() {\n        const vs = [0, 3, 1, 0, 2, 3];\n        let idx;\n\n        this.unitIBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n        let i;\n        let ids = [];\n        for (i = 0; i < 100; i++) ids.push(i);\n        idx = new Uint16Array(ids);\n\n        this.unitI33 = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n        ids = [];\n        for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n        idx = new Uint16Array(ids);\n\n        this.stripBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n    };\n\n    createCircle(raidus) {\n        this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n        const canvas = DomUtil.createCanvas('circle_canvas', this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n        const context = canvas.getContext('2d');\n\n        context.beginPath();\n        context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fillStyle = '#FFF';\n        context.fill();\n\n        return canvas.toDataURL();\n    };\n\n    drawImg2Canvas(particle) {\n        const _w = particle.body.width;\n        const _h = particle.body.height;\n\n        const _width = WebGLUtil.nhpot(particle.body.width);\n        const _height = WebGLUtil.nhpot(particle.body.height);\n\n        const _scaleX = particle.body.width / _width;\n        const _scaleY = particle.body.height / _height;\n\n        if (!this.texturebuffers[particle.data.src])\n            this.texturebuffers[particle.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()];\n\n        particle.data.texture = this.texturebuffers[particle.data.src][0];\n        particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n        particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]), this.gl.STATIC_DRAW);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]), this.gl.STATIC_DRAW);\n\n        const context = particle.data.canvas.getContext('2d');\n        const data = context.getImageData(0, 0, _width, _height);\n\n        this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n        this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n        particle.data.textureLoaded = true;\n        particle.data.textureWidth = _w;\n        particle.data.textureHeight = _h;\n    }\n\n    onProtonUpdate() {\n        // this.gl.clearColor(0, 0, 0, 1);\n        // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    onParticleCreated(particle) {\n        particle.data.textureLoaded = false;\n        particle.data.tmat = Mat3.create();\n        particle.data.tmat[8] = 1;\n        particle.data.imat = Mat3.create();\n        particle.data.imat[8] = 1;\n\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n            particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n        }\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        if (particle.dead) return;\n        particle.body = img;\n        particle.data.src = img.src;\n        particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n        particle.data.oldScale = 1;\n\n        this.drawImg2Canvas(particle);\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.data.textureLoaded) {\n            this.updateMatrix(particle);\n\n            this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n            this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n            this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n            this.mstack.pop();\n        }\n    }\n\n    onParticleDead(particle) { }\n\n    updateMatrix(particle) {\n        const moveOriginMatrix = WebGLUtil.makeTranslation(-particle.data.textureWidth / 2, -particle.data.textureHeight / 2);\n        const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n        const angel = particle.rotation * (MathUtil.PI_180);\n        const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n        const scale = particle.scale * particle.data.oldScale;\n        const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n        let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n        matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n        matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n        Mat3.inverse(matrix, particle.data.imat);\n        matrix[2] = particle.alpha;\n\n        this.mstack.push(matrix);\n    }\n}","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n\n    this.vector.x =\n      this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y =\n      this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (\n        this.direction === \">\" ||\n        this.direction === \"R\" ||\n        this.direction === \"right\" ||\n        this.direction === \"down\"\n      ) {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y))\n          particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    let tha2 = particle.v.getGradient();\n    let tha1 = this.getGradient(particle);\n\n    let tha = 2 * (tha1 - tha2);\n    let oldx = particle.v.x;\n    let oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return (\n      -MathUtil.PI_2 +\n      Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x)\n    );\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width)\n        particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height)\n        particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0)\n        particle.p.x = this.x + this.width + particle.radius;\n      else if (\n        particle.p.x - particle.radius > this.x + this.width &&\n        particle.v.x >= 0\n      )\n        particle.p.x = this.x - particle.radius;\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0)\n        particle.p.y = this.y + this.height + particle.radius;\n      else if (\n        particle.p.y - particle.radius > this.y + this.height &&\n        particle.v.y >= 0\n      )\n        particle.p.y = this.y - particle.radius;\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    var index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    var i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.v.negate();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n","/**\n *  RAFManager requestAnimationFrame Manager\n * \n *  Simple package\n * \n *  CODE:\n * \n * \t\t// Add to\n *  \t-- RAFManager.add(func);\n * \n *   \t// Add and carry parameters\n *  \t-- const func = data =>{ console.log(data) };\n *  \t-- RAFManager.add(func, 25, { msg:'hello world!' }); \n * \t\t\n * \t\t// remove\n *  \t-- RAFManager.remove(func);\n *  \t-- RAFManager.stop();\t\n*/\n\n// simple polyfill by https://gist.github.com/paulirish/1579671\n(function () {\n\tlet lastTime = 0;\n\tlet vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\n\t\t\t|| window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n}());\n\nconst RAFManager = {\n\ttimer: 0,\n\tstate: 'stop',\n\tanimations: [],\n\n\tadd(callback, fps = 60, param = null) {\n\t\tconst n = 60 / fps;\n\t\tconst aniData = { callback, fps, n, param, i: 0 };\n\t\tthis.animations.push(aniData);\n\t\tif (this.animations.length >= 1) this.start();\n\n\t\treturn this;\n\t},\n\n\tgetIndex(callback) {\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tif (aniData.callback === callback) return i;\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tremove(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tif (index < 0) return;\n\n\t\tthis.deleteMap(callback);\n\t\tif (this.animations.length === 0) this.stop();\n\n\t\treturn this;\n\t},\n\n\tdeleteMap(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tconst aniData = this.animations[index];\n\t\tfor (let key in aniData) delete aniData[key];\n\n\t\tthis.animations.splice(index, 1);\n\t},\n\n\tstart() {\n\t\tif (this.state === 'start') return;\n\n\t\tthis.state = 'start';\n\t\tthis.tick();\n\t\treturn this;\n\t},\n\n\tstop() {\n\t\tif (this.state === 'stop') return;\n\n\t\tthis.state = 'stop';\n\t\tcancelAnimationFrame(this.timer);\n\t\treturn this;\n\t},\n\n\ttick() {\n\t\tthis.timer = requestAnimationFrame(() => { this.tick(); });\n\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tconst callback = aniData.callback;\n\t\t\tconst param = aniData.param;\n\n\t\t\taniData.i++;\n\t\t\tif (aniData.i >= aniData.n) {\n\t\t\t\tcallback(param);\n\t\t\t\taniData.i = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default RAFManager;","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"index\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_my_header = _resolveComponent(\"my-header\");\n\n  var _component_my_main = _resolveComponent(\"my-main\");\n\n  var _component_my_footer = _resolveComponent(\"my-footer\");\n\n  var _component_particles_bg = _resolveComponent(\"particles-bg\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_my_header), _createVNode(_component_my_main), _createVNode(_component_my_footer), _createVNode(_component_particles_bg, {\n    type: \"cobweb\",\n    canvas: {\n      backgroundColor: '#fff'\n    },\n    bg: true\n  })]);\n}","<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElContainer',\n})\nconst props = defineProps({\n  direction: {\n    type: String,\n  },\n})\nconst slots = useSlots()\n\nconst ns = useNamespace('container')\n\nconst isVertical = computed(() => {\n  if (props.direction === 'vertical') {\n    return true\n  } else if (props.direction === 'horizontal') {\n    return false\n  }\n  if (slots && slots.default) {\n    const vNodes: VNode[] = slots.default()\n    return vNodes.some((vNode) => {\n      const tag = (vNode.type as Component).name\n      return tag === 'ElHeader' || tag === 'ElFooter'\n    })\n  } else {\n    return false\n  }\n})\n</script>\n","<template>\n  <aside :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </aside>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElAside',\n})\nconst props = defineProps({\n  width: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('aside')\nconst style = computed(\n  () =>\n    (props.width ? ns.cssVarBlock({ width: props.width }) : {}) as CSSProperties\n)\n</script>\n","<template>\n  <footer :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </footer>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElFooter',\n})\nconst props = defineProps({\n  height: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('footer')\n\nconst style = computed(\n  () =>\n    (props.height\n      ? ns.cssVarBlock({ height: props.height })\n      : {}) as CSSProperties\n)\n</script>\n","<template>\n  <header :class=\"ns.b()\" :style=\"style\">\n    <slot />\n  </header>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElHeader',\n})\n\nconst props = defineProps({\n  height: {\n    type: String,\n    default: null,\n  },\n})\n\nconst ns = useNamespace('header')\nconst style = computed(() => {\n  return props.height\n    ? (ns.cssVarBlock({\n        height: props.height,\n      }) as CSSProperties)\n    : {}\n})\n</script>\n","<template>\n  <main :class=\"ns.b()\">\n    <slot />\n  </main>\n</template>\n<script lang=\"ts\" setup>\nimport { useNamespace } from '@element-plus/hooks'\n\ndefineOptions({\n  name: 'ElMain',\n})\n\nconst ns = useNamespace('main')\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\n\nimport Container from './src/container.vue'\nimport Aside from './src/aside.vue'\nimport Footer from './src/footer.vue'\nimport Header from './src/header.vue'\nimport Main from './src/main.vue'\n\nexport const ElContainer = withInstall(Container, {\n  Aside,\n  Footer,\n  Header,\n  Main,\n})\n\nexport default ElContainer\nexport const ElAside = withNoopInstall(Aside)\nexport const ElFooter = withNoopInstall(Footer)\nexport const ElHeader = withNoopInstall(Header)\nexport const ElMain = withNoopInstall(Main)\n\nexport type ContainerInstance = InstanceType<typeof Container>\nexport type AsideInstance = InstanceType<typeof Aside>\nexport type FooterInstance = InstanceType<typeof Footer>\nexport type HeaderInstance = InstanceType<typeof Header>\nexport type MainInstance = InstanceType<typeof Main>\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-3d7f2ba5\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  \"class\": \"my-name\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Xinkai Lin\");\n\nvar _hoisted_3 = {\n  \"class\": \"my-link\"\n};\n\nvar _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Home\");\n\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Photo\");\n\nvar _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Games\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n\n  var _component_el_header = _resolveComponent(\"el-header\");\n\n  return _openBlock(), _createBlock(_component_el_header, {\n    \"class\": \"w clearfix\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, [_createVNode(_component_router_link, {\n        \"class\": \"name\",\n        to: \"/\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_hoisted_2];\n        }),\n        _: 1\n      })])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n        \"class\": \"link-color\",\n        to: \"/home\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_hoisted_4];\n        }),\n        _: 1\n      })]), _createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n        \"class\": \"link-color\",\n        to: \"/photo\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_hoisted_5];\n        }),\n        _: 1\n      })]), _createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n        \"class\": \"link-color\",\n        to: \"/games\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_hoisted_6];\n        }),\n        _: 1\n      })])])])];\n    }),\n    _: 1\n  });\n}","export default {\n  name: 'MyHeader'\n};","/* unplugin-vue-components disabled */import { render } from \"./Header.vue?vue&type=template&id=3d7f2ba5&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=3d7f2ba5&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3d7f2ba5\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n\n  var _component_el_main = _resolveComponent(\"el-main\");\n\n  return _openBlock(), _createBlock(_component_el_main, {\n    \"class\": \"w\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_router_view)];\n    }),\n    _: 1\n  });\n}","export default {\n  name: 'MyMain'\n};","/* unplugin-vue-components disabled */import { render } from \"./Main.vue?vue&type=template&id=1f4bfd01\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-77ce070b\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"links\"\n  }, [/*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://www.linkedin.com/in/xinkailin/\",\n    target: \"_blank\"\n  }, \" LinkedIn \")]), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://www.instagram.com/xinkai00007/\",\n    target: \"_blank\"\n  }, \" Instagram \")]), /*#__PURE__*/_createElementVNode(\"li\", {\n    \"class\": \"lastLi\"\n  }, [/*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"mailto: xinkailin1995@gmail.com\"\n  }, \" Email\")])])], -1);\n});\n\nvar _hoisted_2 = {\n  \"class\": \"copy-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_footer = _resolveComponent(\"el-footer\");\n\n  return _openBlock(), _createBlock(_component_el_footer, {\n    \"class\": \"w\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, \"© Xinkai Lin. All Rights Reserved \" + _toDisplayString($data.date), 1)];\n    }),\n    _: 1\n  });\n}","import \"core-js/modules/es.date.to-string.js\";\nexport default {\n  name: 'MyFooter',\n  data: function data() {\n    return {\n      date: new Date().getFullYear()\n    };\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./Footer.vue?vue&type=template&id=77ce070b&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=77ce070b&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77ce070b\"]])\n\nexport default __exports__","<template>\n  <component\n    :is=\"particles\"\n    :globalCompositeOperation=\"globalCompositeOperation\"\n    :num=\"getNum()\"\n    :bg=\"bg\"\n    :color=\"color\"\n    :canvas=\"canvas\"\n    :config=\"config\"\n  ></component>\n</template>\n\n<script>\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\n\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n\n    getFromList(){\n      if(!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n\n      return item;\n    },\n\n    transformName(name){\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n","// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n        new Proton.Span(0.8, 1.3)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(5, 8),\n          new Proton.Span(30, 70),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(\n        new Proton.Color([\n          \"#36aaf3\",\n          \"#fd769c\",\n          \"#94ff22\",\n          \"#ffa545\",\n          \"#ffffff\"\n        ])\n      );\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(\n        new Proton.Span(3, 6),\n        new Proton.Span(1, 2)\n      );\n\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(1.5, 3),\n          new Proton.Span(0, 70, true),\n          \"polar\"\n        )\n      );\n\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          \"bound\"\n        )\n      );\n      this.proton.addEmitter(miniEmitter);\n\n      this.miniEmitter = miniEmitter;\n    },\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(\n        particle.radius * 0.05,\n        particle.radius * 0.2\n      );\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","<template>\n  <canvas\n    class=\"canvas\"\n    ref=\"canvasRef\"\n    v-bind:style=\"styleObject\"\n    v-on:mousedown=\"handleMouseDown\"\n    v-on:mousemove=\"handleMouseMove\"\n  />\n</template>\n\n<script>\nexport default {\n  name: \"CanvasComp\",\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    globalCompositeOperation: String\n  },\n  data: function() {\n    return {\n      styleObject: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    };\n  },\n  methods: {\n    initCanvas: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n\n      if (this.globalCompositeOperation) {\n        const context = canvas.getContext(\"2d\");\n        context.globalCompositeOperation = this.globalCompositeOperation;\n      }\n\n      this.$emit(\"canvasInited\", canvas);\n    },\n    resize: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n      this.$emit(\"canvasResize\", { width, height });\n    },\n\n    handleMouseDown: function(e) {\n      this.$emit(\"canvasMouseDown\", e);\n    },\n\n    handleMouseMove: function(e) {\n      this.$emit(\"canvasMouseMove\", e);\n    }\n  },\n  created() {\n    if (this.bg) {\n      this.styleObject = Object.assign(this.styleObject, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    }\n\n    if(this.canvas){\n      this.styleObject = Object.assign(this.styleObject, this.canvas);\n    }\n  },\n  mounted() {\n    this.initCanvas();\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n</style>\n","import { render } from \"./CanvasComp.vue?vue&type=template&id=0fc19be9&scoped=true\"\nimport script from \"./CanvasComp.vue?vue&type=script&lang=js\"\nexport * from \"./CanvasComp.vue?vue&type=script&lang=js\"\n\nimport \"./CanvasComp.vue?vue&type=style&index=0&id=0fc19be9&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fc19be9\"]])\n\nexport default __exports__","\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {};\n}\n\nfunction getColor(color, a) {\n    let c;\n    if (color) {\n        c = hexToRgb(color);\n        return `rgba(${c.r},${c.g},${c.b}, ${a})`;\n    } else {\n        return null;\n    }\n}\n\n\nexport { hexToRgb, getColor };","import { render } from \"./BallParticles.vue?vue&type=template&id=3fe54be5\"\nimport script from \"./BallParticles.vue?vue&type=script&lang=js\"\nexport * from \"./BallParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"ColorParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(5, 8),\n        new Proton.Span(0.1, 0.25)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(\n        new Proton.Position(new Proton.RectZone(0, 0, width, height))\n      );\n\n      emitter.addBehaviour(\n        new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic)\n      );\n      emitter.addBehaviour(\n        new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic)\n      );\n      emitter.addBehaviour(new Proton.Color(colors, \"random\"));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./ColorParticles.vue?vue&type=template&id=2951e5a3\"\nimport script from \"./ColorParticles.vue?vue&type=script&lang=js\"\nexport * from \"./ColorParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"ColorParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num || 20);\n      emitter.damping = 0.008;\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(30, 600));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(0.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        )\n      );\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n      emitter.addBehaviour(new Proton.Color(this.getColor()));\n      emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    getColor() {\n      let c = colors;\n      if (this.color) {\n        if (Array.isArray(this.color)) {\n          c = this.color;\n        } else {\n          c = [this.color];\n        }\n      }\n\n      return c;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CircleParticles.vue?vue&type=template&id=2286823d\"\nimport script from \"./CircleParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CircleParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"CobwebParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(100),\n        new Proton.Span(0.05, 0.2)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 4));\n      emitter.addInitialize(new Proton.Life(Infinity));\n      const pointZone = new Proton.Position(\n        new Proton.RectZone(0, 0, width, height)\n      );\n      emitter.addInitialize(pointZone);\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(0.3, 0.6),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n      emitter.addBehaviour(new Proton.Color(this.color || \"#333\"));\n      this.crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, width, height),\n        \"cross\"\n      );\n      emitter.addBehaviour(this.crossZoneBehaviour);\n\n      emitter.emit(\"once\");\n      emitter.damping = 0;\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas, emitter));\n    },\n    createRenderer(canvas, emitter) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      const R = 140;\n\n      renderer.onProtonUpdateAfter = () => {\n        let particles = emitter.particles;\n\n        for (let i = 0; i < particles.length; i++) {\n          for (let j = i + 1; j < particles.length; j++) {\n            let pA = particles[i];\n            let pB = particles[j];\n            let dis = pA.p.distanceTo(pB.p);\n\n            if (dis < R) {\n              let alpha = (1 - dis / R) * 0.5;\n              context.strokeStyle =\n                getColor(this.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n              context.beginPath();\n              context.moveTo(pA.p.x, pA.p.y);\n              context.lineTo(pB.p.x, pB.p.y);\n              context.closePath();\n              context.stroke();\n            }\n          }\n        }\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CobwebParticles.vue?vue&type=template&id=2fc246c4\"\nimport script from \"./CobwebParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CobwebParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"ThickParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.canvasDom = canvas;\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 150);\n\n      // Initialize\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(8));\n      emitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(0.1, 0.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(\n          new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n        )\n      );\n\n      // Behaviour\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      this.repulsion = new Proton.Repulsion(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2 - 100\n        },\n        3,\n        300\n      );\n\n      this.attraction = new Proton.Attraction(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2\n        },\n        3,\n        200\n      );\n      emitter.addBehaviour(this.attraction, this.repulsion);\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = () => {\n        this.hue += 1;\n        context.fillStyle = getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n        particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        const hue = particle.data.begin + this.hue;\n        particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n        const ratio = 3 / 4;\n        const radius =\n          particle.radius *\n            (1 - ratio) *\n            Math.cos((particle.data.tha += 0.01)) +\n          particle.radius * ratio;\n\n        context.beginPath();\n        context.fillStyle = particle.color;\n        context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      const canvas = this.canvasDom;\n      this.proton.update();\n      if (this.index % 200 === 0) {\n        this.attraction.targetPosition.x = Math.random() * canvas.width;\n        this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n        this.repulsion.targetPosition.x = Math.random() * canvas.width;\n        this.repulsion.targetPosition.y = Math.random() * canvas.height;\n      }\n\n      this.index++;\n    }\n  },\n  created() {\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./ThickParticles.vue?vue&type=template&id=81872e3e\"\nimport script from \"./ThickParticles.vue?vue&type=script&lang=js\"\nexport * from \"./ThickParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"getCompositeOperation()\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    getCompositeOperation() {\n      const globalCompositeOperation =\n        this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n\n    getProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      \n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n\n    getArrProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (!val) return null;\n\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n\n    createProton(canvas, width, height) {\n      const num = this.getProp(\"num\", [5, 8]);\n      const rps = this.getProp(\"rps\", [0.1, 0.2]);\n      const mass = this.getProp(\"mass\", 1);\n      const radius = this.getProp(\"radius\", [10, 30]);\n      const life = this.getProp(\"life\", [2, 3]);\n      const body = this.getProp(\"body\");\n      const position = this.getProp(\"position\");\n      const v = this.getProp(\"v\", [2, 3]);\n      const tha = this.getProp(\"tha\", [-15, 15]);\n      const alpha = this.getArrProp(\"alpha\");\n      const scale = this.getArrProp(\"scale\");\n      const color = this.getArrProp(\"color\");\n      const cross = this.getProp(\"cross\", \"dead\");\n      const random = this.getProp(\"random\");\n      const rotate = this.getArrProp(\"rotate\");\n      const g = this.getProp(\"g\");\n      const f = this.getArrProp(\"f\");\n      const emitterV = this.getProp(\"emitter\");\n\n      this.proton = new Proton();\n      let emitter;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n\n      let pos;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        );\n      } else if (typeof position === \"object\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(\n            position.x,\n            position.y,\n            position.width,\n            position.height\n          )\n        );\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      const alphaB = alpha\n        ? new Proton.Alpha(alpha[0], alpha[1])\n        : new Proton.Alpha(0, 1);\n      const scaleB = scale\n        ? new Proton.Scale(scale[0], scale[1])\n        : new Proton.Scale(1, 0.2);\n      const colorB = color\n        ? new Proton.Color(color[0], color[1])\n        : new Proton.Color(colors);\n\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n\n      const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      random &&\n        emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    createRenderer(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      const onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = () => {\n          onUpdate(context, width, height);\n        };\n      }\n\n      const onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = particle => {\n          onParticleCreated(context, particle);\n        };\n      }\n\n      const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = particle => {\n          onParticleUpdate(context, particle);\n        };\n      }\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CustomParticles.vue?vue&type=template&id=9ea53cf0\"\nimport script from \"./CustomParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CustomParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"LinesParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 250);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      \n      const mouseObj = {\n        x: width / 2,\n        y: height / 2\n      };\n      const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n      emitter.p.x = canvas.width / 2;\n      emitter.p.y = canvas.height / 2;\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.lineWidth = 1;\n        context.moveTo(particle.old.p.x, particle.old.p.y);\n        context.lineTo(particle.p.x, particle.p.y);\n        context.closePath();\n        context.stroke();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./LinesParticles.vue?vue&type=template&id=6b94540c\"\nimport script from \"./LinesParticles.vue?vue&type=script&lang=js\"\nexport * from \"./LinesParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default {\n  name: \"PolygonParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      this.proton = new Proton();\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      renderer.onParticleDead = particle => {};\n\n      const drawPolygon = (particle, count) => {\n        if (count >= 7) {\n          context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n        } else {\n          const radius = particle.radius;\n\n          for (let i = 0; i <= count; i++) {\n            let x =\n              particle.p.x +\n              radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n            let y =\n              particle.p.y +\n              radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n            if (i === 0) context.moveTo(x, y);\n            else context.lineTo(x, y);\n          }\n        }\n      };\n\n      return renderer;\n    },\n\n    createEmitter({\n      mainEmitter,\n      canvas,\n      x,\n      y,\n      radius,\n      color = COLOR,\n      zone = \"dead\",\n      once = \"all\",\n      alpha = 0.85,\n      gravity = 3.5\n    }) {\n      const emitter = this.proton.pool.get(Proton.Emitter);\n\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(\n          this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n          new Proton.Span(1.6, 2.2)\n        );\n\n        const radiusInit = mainEmitter\n          ? new Proton.Radius(10, 110)\n          : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(\n          new Proton.Velocity(\n            new Proton.Span(4, 6),\n            new Proton.Span(-90, 90),\n            \"polar\"\n          )\n        );\n\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(\n          new Proton.CrossZone(\n            new Proton.RectZone(0, 0, canvas.width, canvas.height),\n            zone\n          )\n        );\n      }\n\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");\n      else emitter.emit();\n\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    },\n\n    expireEmitter(emitter) {\n      setTimeout(() => {\n        emitter.completed = true;\n        this.proton.pool.expire(emitter);\n        this.proton.removeEmitter(emitter);\n      }, 500);\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize: particle => {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: particle => {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n\n          if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            this.createEmitter({\n              canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./PolygonParticles.vue?vue&type=template&id=395b3162\"\nimport script from \"./PolygonParticles.vue?vue&type=script&lang=js\"\nexport * from \"./PolygonParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"lighter\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nconst colors = [\n  \"#fad390\",\n  \"#81ecec\",\n  \"#ffffff\",\n  \"#badc58\",\n  \"#f9ca24\",\n  \"#FEA47F\"\n];\nexport default {\n  name: \"SquareParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      const dis = 150;\n      this.crossZoneBehaviour.zone.width = width + 2 * dis;\n      this.crossZoneBehaviour.zone.height = height + 2 * dis;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.damping = 0;\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4, 70));\n      emitter.addInitialize(\n        new Proton.Velocity(new Proton.Span(4, 12), 180, \"polar\")\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.LineZone(0, 0, canvas.width, 0))\n      );\n\n      const dis = 150;\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(\n          0 - dis,\n          0 - dis,\n          canvas.width + 2 * dis,\n          canvas.height + 2 * dis\n        ),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n      emitter.addBehaviour(new Proton.Color(colors));\n\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n      emitter.preEmit(2);\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        const w = particle.radius || 60;\n        const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n        particle.data.w = w;\n        particle.data.h = h;\n      };\n\n      renderer.onParticleUpdate = particle => {\n        const w = particle.data.w;\n        const h = particle.data.h;\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./SquareParticles.vue?vue&type=template&id=227332d9\"\nimport script from \"./SquareParticles.vue?vue&type=script&lang=js\"\nexport * from \"./SquareParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"FountainParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 8),\n        new Proton.Span(0.1, 0.25)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 7),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Scale(0.2, 1));\n      emitter.addBehaviour(this.createCustomBehaviour());\n      emitter.addBehaviour(new Proton.Color(colors, \"random\"));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n    createCustomBehaviour() {\n      const f = 10 * 100;\n      return {\n        initialize: function(particle) {\n          particle.f = new Proton.Vector2D(0, 0);\n        },\n        applyBehaviour: particle => {\n          let length = particle.v.length() / 1000;\n          let gradient = particle.v.getGradient();\n          gradient += 3.14 / 2;\n\n          particle.f.x = f * length * Math.cos(gradient);\n          particle.f.y = f * length * Math.sin(gradient);\n          particle.a.add(particle.f);\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./FountainParticles.vue?vue&type=template&id=33c69588\"\nimport script from \"./FountainParticles.vue?vue&type=script&lang=js\"\nexport * from \"./FountainParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nconst colors = [\n  \"#fad390\",\n  \"#81ecec\",\n  \"#ffffff\",\n  \"#badc58\",\n  \"#f9ca24\",\n  \"#FEA47F\"\n];\nexport default {\n  name: \"TadpoleParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(5, 9));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.RectZone(0, 0, width, height))\n      );\n\n      const mouseInfo = {\n        x: width / 2,\n        y: height / 2\n      };\n\n      const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(new Proton.Color(this.color || \"#bbbbbb\"));\n      //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const jointCount = 12;\n      const delayTime = 6;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = function() {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.points = [];\n        particle.data.index = 0;\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        drawTadpoleTail(particle);\n        if (particle.data.index % delayTime === 0) fillPointsData(particle);\n        drawTadpoleHead(particle);\n        particle.data.index++;\n      };\n\n      const fillPointsData = particle => {\n        particle.data.points.unshift(particle.p.y);\n        particle.data.points.unshift(particle.p.x);\n\n        if (particle.data.points.length > jointCount) {\n          particle.data.points.pop();\n          particle.data.points.pop();\n        }\n      };\n\n      const drawTadpoleHead = particle => {\n        context.fillStyle = particle.color;\n        context.beginPath();\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        context.closePath();\n        context.fill();\n      };\n\n      const drawTadpoleTail = particle => {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n\n        context.moveTo(particle.p.x, particle.p.y);\n\n        const l = particle.data.points.length;\n        for (let i = 0; i < l; i += 2) {\n          const x = particle.data.points[i];\n          const y = particle.data.points[i + 1];\n\n          context.lineWidth = linearEvaluation(i, l);\n          context.lineTo(x, y);\n          context.stroke();\n        }\n      };\n\n      const linearEvaluation = (i, l) => {\n        if (l <= 2) return 1;\n\n        const max = 6;\n        const A = (max - 1) / (2 / l - 1);\n        const B = 1 - A;\n        const X = (i + 2) / l;\n        let val = A * X + B;\n        val = val >> 0;\n\n        return val;\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./TadpoleParticles.vue?vue&type=template&id=ec91e7f6\"\nimport script from \"./TadpoleParticles.vue?vue&type=script&lang=js\"\nexport * from \"./TadpoleParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ParticlesBg.vue?vue&type=template&id=d60e5c56\"\nimport script from \"./ParticlesBg.vue?vue&type=script&lang=js\"\nexport * from \"./ParticlesBg.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import ParticlesBg from \"./ParticlesBg\";\n\nconst components = {\n  ParticlesBg: ParticlesBg\n};\n\nconst install = function(Vue) {\n  if (install.installed) return;\n\n  for (let key in components) {\n    Vue.component(components[key].name, components[key]);\n  }\n};\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  install(window.Vue);\n}\n\nconst VueParticlesBg = {\n  install,\n  ...components\n};\n\nexport { ParticlesBg };\nexport default VueParticlesBg;\n","import MyHeader from '@/views/layout/Header.vue';\nimport MyMain from '@/views/layout/Main.vue';\nimport MyFooter from '@/views/layout/Footer.vue';\nimport { ParticlesBg } from 'particles-bg-vue';\nimport icon from '@/assets/images/icon.js';\nexport default {\n  name: 'MyIndex',\n  components: {\n    MyHeader: MyHeader,\n    MyMain: MyMain,\n    MyFooter: MyFooter,\n    ParticlesBg: ParticlesBg\n  },\n  data: function data() {\n    return {\n      config: {\n        num: [4, 7],\n        rps: 0.1,\n        radius: [5, 40],\n        life: [1.5, 3],\n        v: [2, 3],\n        tha: [-30, 30],\n        body: icon,\n        alpha: [0.6, 0],\n        scale: [0.1, 0.4],\n        position: 'all',\n        cross: 'dead',\n        random: 15\n      }\n    };\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./index.vue?vue&type=template&id=69a1ea4c\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/xinkai/Desktop/Web Development/xinkailin95.github.io/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["$","fill","addToUnscopables","target","proto","createHTML","forcedStringHTMLMethod","forced","sub","this","uncurryThis","requireObjectCoercible","toIntegerOrInfinity","toString","stringSlice","slice","max","Math","min","FORCED","substr","start","length","intLength","intEnd","that","size","intStart","Infinity","undefined","createTypedArrayConstructor","init","data","byteOffset","PI","MathUtil","PI_180","N180_PI","isInfinity","num","a","b","floor","random","center","f","isInt","randomAToB","randomZone","k","digits","pow","toColor16","i","o","t","constructor","value","enumerable","writable","configurable","Span","isArray","Util","getRandFromArray","randomFloating","c","pan","getValue","initValue","d","tx","ty","y","angleInRadians","cos","s","sin","p","sx","sy","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","createCanvas","id","width","height","position","dom","document","createElement","style","opacity","transform","resize","marginLeft","marginTop","div","x","scale","rotate","willChange","css3","key","val","bkey","charAt","toUpperCase","imgsCache","canvasCache","canvasId","_","context","image","rect","drawImage","imagedata","getImageData","clearRect","img","callback","param","src","Image","onload","g","e","canvas","WebGLUtil","DomUtil","getContext","defaults","Object","prototype","call","arr","toArray","emptyObject","obj","ignore","indexOf","args","bind","apply","concat","particle","conf","hasProp","v","copy","props","prop","hasOwnProperty","getSpanValue","ImgUtil","destroy","assign","source","idsMap","Puid","_index","_cache","type","uid","getIdFromCache","isBody","isInner","Pool","params","__puid","getId","cache","pop","createOrClone","getCache","push","total","create","classApply","clone","count","Stats","body","add","emitter","getEmitter","renderer","getRenderer","str","proton","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","getCount","pool","container","innerHTML","cssText","join","addEventListener","_this","bg","color","r","parentNode","appendChild","emitterIndex","renderers","rendererIndex","result","cpool","round","EventDispatcher","listener","_listeners","removeEventListener","splice","listeners","handler","dispatchEvent","hasEventListener","removeAllEventListeners","Integration","particles","time","damping","eulerIntegrate","sleep","old","multiplyScalar","mass","clear","Proton","render","index","remove","parent","EMITTER_ADDED","EMITTER_REMOVED","_fps","PROTON_UPDATE","USE_CLOCK","then","Date","getTime","now","elapsed","amendChangeTabsBug","emittersUpdate","DEFAULT_INTERVAL","PROTON_UPDATE_AFTER","_interval","update","destroyAll","destroyOther","getAllParticles","set","fps","get","integrationType","stats","EULER","integrator","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","C","Rgb","L","easeLinear","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","PI_2","easeInExpo","easeOutExpo","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","ease","Vector2D","atan2","w","addVectors","subVectors","divideScalar","distanceToSquared","tha","dx","dy","alpha","Particle","life","age","dead","sprite","energy","radius","rotation","easing","rgb","reset","removeAllBehaviours","applyBehaviours","applyBehaviour","behaviour","parents","initialize","addBehaviour","P","emptyArray","N","setProp","hexToRgb","h","hex16","substring","parseInt","rgbToHex","rbg","Number","Polar2D","getX","getY","abs","Mat3","mat3","mat","Float32Array","mat1","mat2","m","vec","ArraySpan","_arr","randomColor","W","Rectangle","right","bottom","Rate","startTime","nextTime","timePan","numPan","J","numpan","timepan","setSpanValue","Initialize","Life","lifePan","Zone","vector","crossType","alert","PointZone","error","st","Position","zone","getPosition","Velocity","rpan","thapan","rPan","thaPan","vr","polar2d","normalizeVelocity","Mass","massPan","Radius","oldRadius","Body","imageTarget","inner","Behaviour","force","removeBehaviour","mt","Force","fx","fy","normalizeForce","calculate","Attraction","targetPosition","normalizeValue","radiusSq","attractionForce","lengthSq","normalize","RandomDrift","driftX","driftY","delay","panFoce","addXY","Et","Gravity","Collision","collisionPool","delta","overlap","totalMass","averageMass1","averageMass2","distance","newPool","otherParticle","n","CrossZone","crossing","Alpha","same","alphaA","alphaB","It","Scale","scaleA","scaleB","Rotate","rotationA","rotationB","getDirection","influence","Color","createArraySpan","colorA","ColorUtil","colorB","CHANGING","Cyclone","angle","span","String","toLowerCase","setAngleAndForce","cangle","cyclone","gradient","getGradient","Repulsion","Ht","GravityWell","centerPoint","distanceVec","factor","distanceSq","bindEmitter","setVectorVal","degreeTransform","Emitter","totalTime","stoped","emitTime","isNaN","rate","oldStoped","oldEmitTime","oldTotalTime","initAll","rest","initializer","arguments","emitting","integrate","dispatch","expire","event","bindEvent","createParticle","setupParticle","addBehaviours","stop","removeAllInitializers","removeEmitter","BehaviourEmitter","selfBehaviours","FollowEmitter","mousemoveHandler","_this2","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","mouseTarget","_allowEmitting","layerX","layerY","offsetX","offsetY","babelHelpers.get","Jt","window","initEventHandler","BaseRenderer","thinkness","stroke","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","te","element","circleConf","isCircle","initHandler","CanvasRenderer","addImg2Body","drawCircle","bufContext","buffer","createBuffer","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","bufferCache","DomRenderer","bodyReady","transform3d","backgroundColor","removeChild","babelHelpers.typeof","createCircle","createSprite","createDiv","borderRadius","borderColor","borderWidth","url","backgroundImage","createBody","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","PIXIClass","PixiRenderer","PIXI","Sprite","createFromImage","from","fromImage","blendMode","setColor","tint","getHex16FromParticle","anchor","endFill","setPIXI","MStack","mats","multiply","ye","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","CustomRenderer","umat","smat","mstack","viewport","circleCanvasURL","texturebuffers","A","B","fs","VERTEX_SHADER","shader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","getShader","getFragmentShader","vertexShader","getVertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","drawImg2Canvas","updateMatrix","uniform3f","uniformMatrix3fv","top","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","inverse","LineZone","x1","y1","dot","xxyy","tha2","oldx","oldy","maxx","minx","maxy","miny","direction","rangeOut","getDistance","getSymmetric","ge","x2","y2","getLength","CircleZone","PIx2","randomRadius","distanceTo","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","negate","func","getStyle","moveTo","lineTo","drawRect","Vector","Polar","getSpan","Init","V","M","R","F","RD","G","S","WebGlRenderer","Debug","vendors","requestAnimationFrame","cancelAnimationFrame","timer","state","animations","aniData","getIndex","deleteMap","tick","_hoisted_1","_ctx","$props","$setup","$data","$options","_component_my_header","_component_my_main","_component_my_footer","_component_particles_bg","ns","ElFooter","withInstall","Container","Aside","Footer","Header","Main","withNoopInstall","ElHeader","ElMain","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_router_link","_component_el_header","to","__exports__","_component_router_view","_component_el_main","href","_component_el_footer","date","getFullYear","_createBlock","_resolveDynamicComponent","config","Rand","list","probability","calculation","_component_canvas_comp","onCanvasInited","onCanvasResize","onCanvasMouseDown","_createElementBlock","class","ref","onMousedown","onMousemove","Boolean","styleObject","methods","initCanvas","$refs","canvasRef","clientWidth","clientHeight","$emit","handleMouseDown","handleMouseMove","created","zIndex","left","mounted","beforeDestroy","hex","exec","getColor","components","CanvasComp","canvasInited","createProton","createMiniEmitter","RAFManager","renderProton","canvasResize","crossZoneBehaviour","canvasMouseDown","addInitialize","customDeadBehaviour","emit","addEmitter","addRenderer","miniEmitteing","miniEmitter","radiusInitialize","colorBehaviour","colors","Array","pointZone","createRenderer","pA","pB","dis","canvasDom","repulsion","attraction","hue","begin","colorTemplate","replace","ratio","getCompositeOperation","operation","getProp","defaultVal","getArrProp","pos","rps","cross","emitterV","onUpdate","mouseObj","attractionBehaviour","COLOR","createEmitter","mainEmitter","drawPolygon","once","gravity","completed","radiusInit","expireEmitter","setTimeout","emitterCount","preEmit","createCustomBehaviour","mouseInfo","jointCount","delayTime","points","drawTadpoleTail","fillPointsData","drawTadpoleHead","unshift","l","linearEvaluation","X","ColorParticles","CircleParticles","CobwebParticles","ThickParticles","LinesParticles","FountainParticles","CustomParticles","PolygonParticles","SquareParticles","TadpoleParticles","BallParticles","required","default","getNum","getRandom","getResult","getFromList","item","transformName","setParticles","beforeMount","ParticlesBg","install","Vue","installed","component","MyHeader","MyMain","MyFooter","icon","_typeof","module","exports","Symbol","iterator","__esModule"],"sourceRoot":""}